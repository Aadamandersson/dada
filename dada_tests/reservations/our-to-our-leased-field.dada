class Point(a, b)

class OurLeased(f)

async fn main() {
    p = Point(22, 44).share         # create `(22, 44)` with shared ownership
    print(p.lease).await            #! OUTPUT Point\(22, 44\)
    q = OurLeased(p.shlease)        # `OurLeased` takes 2nd ownership of `(22, 44)`
    print(q.lease).await            #! OUTPUT OurLeased\(our Point\(22, 44\)\)
    p := Point(44, 66)              # reassigning `p` doesn't invalidate `q.f`
    
    print(q.lease).await            #! OUTPUT OurLeased\(our Point\(22, 44\)\)
    print(p.lease).await            #! OUTPUT Point\(44, 66\)
    print(q.lease).await            #! OUTPUT OurLeased\(our Point\(22, 44\)\)
}