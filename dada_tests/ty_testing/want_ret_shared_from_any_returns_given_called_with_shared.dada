class Name(s)
class Character(name: my Name)

# This function would fail the static check, because it doesn't
# do the right thing in all cases, but if it is invoked with an
# our value, it happens to work.
fn name(c: Character) -> shared{c} Name {
    c.name.give
}

let c1 = Character(Name("Achilles"))
let n_given = name(c1.share)
print(n_given).await #! OUTPUT Name\(Achilles\)
print(c1.name).await #! OUTPUT Name\(Achilles\)
c1.name = Name("Ajax")
print(n_given).await #! RUN ERROR cancelled