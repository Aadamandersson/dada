/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_dadarange_free(a: number): void;
export function __wbg_get_dadarange_start(a: number): number;
export function __wbg_set_dadarange_start(a: number, b: number): void;
export function __wbg_get_dadarange_end(a: number): number;
export function __wbg_set_dadarange_end(a: number, b: number): void;
export function __wbg_dadalinecolumn_free(a: number): void;
export function __wbg_get_dadalinecolumn_line0(a: number): number;
export function __wbg_set_dadalinecolumn_line0(a: number, b: number): void;
export function __wbg_get_dadalinecolumn_column0(a: number): number;
export function __wbg_set_dadalinecolumn_column0(a: number, b: number): void;
export function __wbg_dadadiagnostic_free(a: number): void;
export function __wbg_dadalabel_free(a: number): void;
export function __wbg_get_dadalabel_start(a: number): number;
export function __wbg_set_dadalabel_start(a: number, b: number): void;
export function __wbg_get_dadalabel_end(a: number): number;
export function __wbg_set_dadalabel_end(a: number, b: number): void;
export function dadadiagnostic_severity(a: number, b: number): void;
export function dadadiagnostic_primary_label(a: number): number;
export function dadalabel_message(a: number, b: number): void;
export function start(): void;
export function __wbg_dadacompiler_free(a: number): void;
export function compiler(): number;
export function dadacompiler_with_source_text(a: number, b: number, c: number): number;
export function dadacompiler_with_breakpoint(a: number, b: number, c: number): number;
export function dadacompiler_without_breakpoint(a: number): number;
export function dadacompiler_execute(a: number): number;
export function dadacompiler_num_diagnostics(a: number): number;
export function dadacompiler_diagnostic(a: number, b: number): number;
export function dadacompiler_num_breakpoint_ranges(a: number): number;
export function dadacompiler_breakpoint_range(a: number, b: number): number;
export function dadacompiler_diagnostics(a: number, b: number): void;
export function dadacompiler_output(a: number, b: number): void;
export function dadacompiler_heap_before(a: number, b: number): void;
export function dadacompiler_heap_after(a: number, b: number): void;
export function rust_psm_on_stack(a: number, b: number, c: number, d: number): void;
export function rust_psm_stack_direction(): number;
export function rust_psm_stack_pointer(): number;
export function rust_psm_replace_stack(a: number, b: number, c: number): void;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number): number;
export const __wbindgen_export_2: WebAssembly.Table;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h6246e0110d1beb88(a: number, b: number, c: number): void;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number): void;
export function __wbindgen_exn_store(a: number): void;
export function wasm_bindgen__convert__closures__invoke2_mut__h190f14940d20e675(a: number, b: number, c: number, d: number): void;
export function __wbindgen_start(): void;
